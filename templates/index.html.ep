<style>
  mark {
    background-color: lightyellow;
  }
</style>

<section>
  <h2>Awaiting Mojolicious</h2>
  <p>Joel Berger</p>
  <p>Purdue Perl Mongers</p>
  <p>September 9, 2020</p>
</section>

%= markdown_section begin
## About This Talk

* Lots of code
* Follow along <https://jberger.github.io/AwaitingMojolicious>
* All code included in the repo <https://github.com/jberger/AwaitingMojolicious>
* All the code is complete and functions
* All the tests pass (demo)
% end

%= markdown_section begin
## Outline

* Introduce the Mojolicious project
* Overview of the Mojo Toolkit
* Iteratively build up a non-trivial app
  - with tests
* Introduce Mojolicious concepts
* Convert it to non-blocking
% end

<section>
  <section>
    <h2>What is Mojolicious?</h2>

    <img src="images/noraptor.png">

    <ul>
      <li>An amazing real-time web framework</li>
      <li>A powerful web development toolkit</li>
      <li>Designed from the ground up</li>
      <li>... based on years of experience developing Catalyst</li>
    </ul>
  </section>

  <section>
    <ul>
      <li>Portable</li>
      <li>No non-core dependencies</li>
      <li>Batteries included</li>
      <li>Real-time and non-blocking</li>
      <li>"... perfect for building highly scalable web services"</li>
      <li>~8k lines of code in lib</li>
      <li>~11k tests (~93% coverage)</li>
      <li>Easy to install (secure, only takes one minute!)</li>
    </ul>
    <pre><code class="bash">curl -L https://cpanmin.us | perl - -M https://cpan.metacpan.org -n Mojolicious</code></pre>
  </section>

  <section>
    <h2>Getting Help</h2>

    <img height="200px" style="float: left;" src="images/failraptor.png">

    <ul>
      <li><a href="http://mojolicious.org" target="_blank">http://mojolicious.org</a></li>
      <li><a href="https://webchat.freenode.net/#mojo" target="_blank">#mojo on Freenode</a></li>
    </ul>
  </section>

</section>

<section>
  <section>
    <h1>Let's begin</h1>
  </section>

  <section>
    <h1>Async is a Hero's Journey</h1>
  </section>

  <section>
    <img src="images/longtimeago.jpg">
  </section>
</section>

<section>
%= markdown_section begin
## The Mojo Toolkit
% end

<section>
  <img src="images/droid_shopping.jpg"></img>
</section>

%= markdown_section begin
## Mojo::DOM

* Find content
* Manipulate content
* CSS3 (and some 4) Selectors
% end

%= markdown_section begin
## Mojo::JSON

* Pure Perl
* Fast
* JSON Pointers
  - grab deep data
% end

%= markdown_section begin
## Mojo::URL

* Inspect
* Manipulate
* See also:
  - Mojo::Path
  - Mojo::Parameters
% end

%= markdown_section begin
## Mojo::UserAgent

* Blocking
* Non-blocking
* Websocket
* Integrated with other Mojo::
% end

%= markdown_section begin
## Test::Mojo

* Starts a real server
* Contains a UserAgent
* Lots of test methods
* Format aware
* Websocket
% end

%= markdown_section begin
## Non-blocking

* Mojo::IOLoop
  - Pluggable Mojo::Reactor classes
* Mojo::Promise
* New Async/Await via Future::AsyncAwait!
% end

  <section>
    <h2>Oh and of course ...</h2>
  </section>

%= markdown_section begin
## The Web Framework!

* Mojolicious
* Mojolicious::Lite (DSL)
% end
</section>

<section>
  <section>
    <img src="images/sunset.jpg"></img>
  </section>

  <section>
    <h2>Hello World!</h2>
    %= include_sample 'ex/hello/world/app.pl'
  </section>

  %= section_group fade => begin
    <h2>Hello World! Test</h2>
    %= include_sample 'ex/hello/world/test.t', lang => 'perl'
  % end, begin
    <h2>Hello World! Test</h2>
    %= include_sample 'ex/hello/world/test.t', lang => 'perl', mark => '3,4'
  % end, begin
    <h2>Hello World! Test</h2>
    %= include_sample 'ex/hello/world/test.t', lang => 'perl', mark => '5,7'
  % end, begin
    <h2>Hello World! Test</h2>
    %= include_sample 'ex/hello/world/test.t', lang => 'perl', mark => '9-11'
  % end
</section>

<section>
  <section>
    <h2>What actually happened?</h2>
    <ul>
      <li class="fragment">text encoded with utf8</li>
      <li class="fragment" style="color: red">default content-type is text/html</li>
    </ul>
  </section>

  %= section_group fade => begin
    <h2>Hello üåê!</h2>
    %= include_sample 'ex/hello/format/app.pl'
  % end, begin
    <h2>Hello üåê!</h2>
    %= include_sample 'ex/hello/format/app.pl', mark => '4'
  % end, begin
    <h2>Hello üåê!</h2>
    %= include_sample 'ex/hello/format/app.pl', mark => '5'
  % end

  <section>
    <h2>Hello üåê! Test</h2>
    %= include_sample 'ex/hello/format/test.t', lang => 'perl', mark => '11,12'
  </section>
</section>

<section>
  <section>
    <h2>Meeting New Friends</h2>
    <img src="images/meeting.jpg" style="width: 50%"></img>
  </section>

  %= section_group fade => begin
    <h2>Hello $user!</h2>
    %= include_sample 'ex/hello/user/app.pl'
  % end, begin
    <h2>Hello $user!</h2>
    %= include_sample 'ex/hello/user/app.pl', mark => '1'
  % end, begin
    <h2>Hello $user!</h2>
    %= include_sample 'ex/hello/user/app.pl', mark => '3'
  % end, begin
    <h2>Hello $user!</h2>
    %= include_sample 'ex/hello/user/app.pl', mark => '4'
  % end, begin
    <h2>Hello $user!</h2>
    %= include_sample 'ex/hello/user/app.pl', mark => '5'
  % end

  <section>
    <h2>Hello $user! Test</h2>
    %= include_sample 'ex/hello/user/test.t#tests', lang => 'perl'
  </section>

  <section>
    <img src="images/han_shot_first.gif"></img>
    <p>#HanShotFirst</p>
  </section>
</section>

<section>
  <section>
    <h2>Other Formats?</h2>
  </section>

  <section>
    <img src="images/drone.jpg" style="width: 50%"></img>
  </section>

  %= section_group fade => begin
    <h2>JSON</h2>
    %= include_sample 'ex/hello/json/app.pl'
  % end, begin
    <h2>JSON</h2>
    %= include_sample 'ex/hello/json/app.pl', mark => '5'
  % end

  %= section_group fade => begin
    <h2>JSON Tests</h2>
    %= include_sample 'ex/hello/json/test.t#tests', lang => 'perl'
  % end, begin
    <h2>JSON Tests</h2>
    %= include_sample 'ex/hello/json/test.t#tests', lang => 'perl', mark => '3'
  % end, begin
    <h2>JSON Tests</h2>
    %= include_sample 'ex/hello/json/test.t#tests', lang => 'perl', mark => '4'
  % end, begin
    <h2>JSON Tests</h2>
    %= include_sample 'ex/hello/json/test.t#tests', lang => 'perl', mark => '5'
  % end
</section>

<section>
  <section>
    <img src="images/dagobah.jpg" style="width: 60%"></img>
  </section>

  %= section_group fade => begin
    <h2>Templates</h2>
    %= include_sample 'ex/hello/template/app.pl'
  % end, begin
    <h2>Templates</h2>
    %= include_sample 'ex/hello/template/app.pl', mark => '4'
  % end, begin
    <h2>Templates</h2>
    %= include_sample 'ex/hello/template/app.pl', mark => '13'
  % end

  %= section_group fade => begin
    <h2>CSS Selectors in Tests</h2>
    %= include_sample 'ex/hello/template/test.t#tests', lang => 'perl'
  % end, begin
    <h2>CSS Selectors in Tests</h2>
    %= include_sample 'ex/hello/template/test.t#tests', lang => 'perl', mark => '4,9'
  % end
</section>

<section>
  <section>
    <h2>Because we've come this far ...</h2>
  </section>

  <section>
    <img src="images/attack.jpg" style="width: 60%"></img>
    <p>Luke, you've turned off your targeting computer!</p>
  </section>

  %= section_group fade => begin
    <h2>Content Negotiation</h2>
    %= include_sample 'ex/hello/content_negotiation/app.pl'
  % end, begin
    <h2>Content Negotiation</h2>
    %= include_sample 'ex/hello/content_negotiation/app.pl', mark => '6'
  % end, begin
    <h2>Content Negotiation</h2>
    %= include_sample 'ex/hello/content_negotiation/app.pl', mark => '7'
  % end

  <section>
    <h2>Testing Content Negotiation</h2>
    %= include_sample 'ex/hello/content_negotiation/test.t#root', lang => 'perl'
  </section>

  <section>
    <h2>Testing Content Negotiation</h2>
    %= include_sample 'ex/hello/content_negotiation/test.t#user', lang => 'perl'
  </section>

  <section>
    <h2>Other Ways to Negotiate</h2>
    %= include_sample 'ex/hello/content_negotiation/test.t#others', lang => 'perl'
  </section>
</section>

<section>
  <img src="images/trap.gif"></img>
</section>

<section>
  <h1>Let's Build a Doc Fetching App</h1>
</section>

<section>
  <section>
    <h1>Goal:<h1>
    <h3>Display Docs Fetched From MetaCPAN</h3>
  </section>

  <section>
    <img src="images/vader_cave.jpg" style="width: 60%"></img>
  </section>

  <section>
    <h2>Simple MetaCPAN App</h2>
    %= include_sample 'ex/metacpan/simple/app.pl'
  </section>

  <section>
    <h2>Mocking An External Service</h2>
    <img src="images/storm_trooper.jpg" style="width: 60%"></img>
    <p>Aren't you a little short for a storm trooper?</p>
  </section>

  <section>
    <h2>Mocking An External Service</h2>
    %= include_sample 'ex/metacpan/simple/test.t#mock', lang => 'perl'
  </section>

  <section>
    <h2>How do we use this mock?</h2>
    <img src="images/mind_trick.gif"></img>
  </section>

  <section>
    <h2>Mocking An External Service</h2>
    <ul>
      <li><code>Mojo::UserAgent</code>
        <ul>
          <li>server for relative urls</li>
          <li>accepts a Mojolicious app</li>
        </ul>
      </li>
      <li class="fragment">Attach mock app to the main app's ua</li>
      <li class="fragment">MetaCPAN url is configurable!</li>
    </ul>
    <div class="fragment">
      %= include_sample 'ex/metacpan/simple/test.t#install', lang => 'perl'
    </div>
  </section>

  <section>
    <h2>Test Simple MetaCPAN App</h2>
    %= include_sample 'ex/metacpan/simple/test.t', lang => 'perl'
  </section>
</section>

<section>
  <section>
    <img src="images/hologram.png" style="width: 70%"></img>
  </section>

  %= section_group fade => begin
    <h2>Smart URL Manipulation</h2>
    %= include_sample 'ex/metacpan/url/app.pl#url'
  % end, begin
    <h2>Smart URL Manipulation</h2>
    %= include_sample 'ex/metacpan/url/app.pl#url', mark => '1,2,3,6'
  % end, begin
    <h2>Smart URL Manipulation</h2>
    %= include_sample 'ex/metacpan/url/app.pl#url', mark => '7'
  % end
</section>

<section>
  <section>
    <h1>Goal:</h1>
    <h3>Fix Link URLs</h3>
  </section>

  <section>
    <h2>Mojo::DOM in Action</h2>
    <h3>Transforming HTML</h3>
  </section>

  <section>
    <img src="images/elegant_weapon.jpg" style="width: 70%"></img>
    <p>An elegant weapon... for a more civilized age</p>
  </section>

  %= section_group fade => begin
    <h2>Transforming HTML</h2>
    %= include_sample 'ex/metacpan/munge_links/app.pl#doc', mark => '5'
  % end, begin
    <h2>Transforming HTML</h2>
    %= include_sample 'ex/metacpan/munge_links/app.pl#doc', mark => '11'
  % end, begin
    <h2>Transforming HTML</h2>
    %= include_sample 'ex/metacpan/munge_links/app.pl#doc', mark => '13'
  % end

  %= section_group fade => begin
    <h2>Transforming HTML</h2>
    %= include_sample 'ex/metacpan/munge_links/app.pl#munge'
  % end, begin
    <h2>Transforming HTML</h2>
    %= include_sample 'ex/metacpan/munge_links/app.pl#munge', mark => '2'
  % end, begin
    <h2>Transforming HTML</h2>
    %= include_sample 'ex/metacpan/munge_links/app.pl#munge', mark => '3'
  % end, begin
    <h2>Transforming HTML</h2>
    %= include_sample 'ex/metacpan/munge_links/app.pl#munge', mark => '4'
  % end

  %= section_group fade => begin
    <h2>Testing the Transformation</h2>
    %= include_sample 'ex/metacpan/munge_links/test.t#test', lang => 'perl'
  % end, begin
    <h2>Testing the Transformation</h2>
    %= include_sample 'ex/metacpan/munge_links/test.t#test', lang => 'perl', mark => '4'
  % end, begin
    <h2>Testing the Transformation</h2>
    %= include_sample 'ex/metacpan/munge_links/test.t#test', lang => 'perl', mark => '11'
  % end, begin
    <h2>Testing the Transformation</h2>
    %= include_sample 'ex/metacpan/munge_links/test.t#test', lang => 'perl', mark => '12'
  % end
</section>

<section>
  <section>
    <h1>Goal:</h1>
    <h3>Add Distribution and ++ to Doc</h3>
  </section>

  <section>
    <h2>We Need More Information from MetaCPAN</h2>
    <img src="images/interrogation.jpg" style="width: 70%"></img>
  </section>

  <section>
    <h3>Its as Simple as ...</h3>
    %= include_sample 'ex/metacpan/blocking/app.pl#action', mark => '5-7'
  </section>

  <section>
    <h2>Get Dist For Module</h2>
    %= include_sample 'ex/metacpan/blocking/app.pl#dist'
    <div class="fragment">
      %= include_sample 'ex/metacpan/blocking/test.t#dist', lang => 'perl'
    </div>
  </section>

  <section>
    <h2>Get Favorite Count For Dist</h2>
    %= include_sample 'ex/metacpan/blocking/app.pl#fav'
    <div class="fragment">
      %= include_sample 'ex/metacpan/blocking/test.t#fav', lang => 'perl'
    </div>
  </section>

  %= section_group fade => begin
    <h2>Inject New HTML</h2>
    %= include_sample 'ex/metacpan/blocking/app.pl#inject'
  % end, begin
    <h2>Inject New HTML</h2>
    %= include_sample 'ex/metacpan/blocking/app.pl#inject', mark => '2-5'
  % end, begin
    <h2>Inject New HTML</h2>
    %= include_sample 'ex/metacpan/blocking/app.pl#inject', mark => '6'
  % end

  <section>
    <h2>Full Application</h2>
    %= include_sample 'ex/metacpan/blocking/app.pl'
  </section>

  <section>
    <h2>Full Test</h2>
    %= include_sample 'ex/metacpan/blocking/test.t', lang => 'perl'
  </section>
</section>

<section>
  <img src="images/surprise.gif" style="width: 70%"></img>
</section>

<section>
  <section>
    <h1>Goal:</h1>
    <h3>Make it Async</h3>
  </section>
</section>

<section>
  <img src="images/hate.gif" style="width: 70%"></img>
</section>

<section>
%= markdown_section begin
## Three basic mechanisms
% end

%= markdown_section begin
## Callbacks

* Old school
* Not worth it anymore
% end

%= markdown_section begin
## Promises

* Mojo::Promise
* Object that represents possible future actions
* Chainable
* Exception Channel
% end

%= markdown_section begin
## Async/Await

* Uses promises
* Much more powerful
* Requires Future::AsyncAwait 0.36+
% end

%= markdown_section begin
## Await Keyword

* Takes a Promise
* Suspends the interpreter until
  - the promise resolves, returns result
  - the promise rejects (errors), throws it

```perl
  my $result = await returns_promise();
```
% end

%= markdown_section begin
## Async Functions

* always return promises
* can call `await`

```perl
my $async = async sub ($args) {
  my $result = await returns_promise();
  ...
};
my $promise = $async->($args);
```
% end

%= markdown_section begin
## Async is ... easy

* await anything that
  - returns a promise
  - is marked async
* mark any function that calls await as async
* that's it, really*!

<small>* In a Mojo webapp at least</small>
% end
</section>

</section>
  %= section_group fade => begin
    <h2>Async/Await</h2>
    %= include_sample 'ex/metacpan/async/app.pl#import'
  % end, begin
    <h2>Async/Await</h2>
    %= include_sample 'ex/metacpan/async/app.pl#doc'
  % end, begin
    <h2>Async/Await</h2>
    %= include_sample 'ex/metacpan/async/app.pl#doc', mark => '1,4'
  % end, begin
    <h2>Async/Await</h2>
    %= include_sample 'ex/metacpan/async/app.pl#dist'
  % end, begin
    <h2>Async/Await</h2>
    %= include_sample 'ex/metacpan/async/app.pl#dist', mark => '1,4'
  % end, begin
    <h2>Async/Await</h2>
    %= include_sample 'ex/metacpan/async/app.pl#favorites'
  % end, begin
    <h2>Async/Await</h2>
    %= include_sample 'ex/metacpan/async/app.pl#favorites', mark => '1,5'
  % end, begin
    <h2>Async/Await</h2>
    %= include_sample 'ex/metacpan/async/app.pl#route'
  % end, begin
    <h2>Async/Await</h2>
    %= include_sample 'ex/metacpan/async/app.pl#route', mark => '1,3,5,6'
  % end

  <section>
    <h2>Full Application</h2>
    %= include_sample 'ex/metacpan/async/app.pl'
  </section>

  <section>
    <h2>And the Tests ...</h2>
    <h3 class="fragment">... are unchanged</h3>
  </section>

</section>

<section>
  <img src="images/vader_cute.png"></img>
  <p class="fragment">Questions?</p>
</section>

<section>
  <section>
    <h2>Command System</h2>
  </section>

  <section>
    <h2>Start App</h2>
    <ul>
      <li><code>./myapp.pl daemon</code></li>
      <li><code>./myapp.pl prefork</code></li>
    </ul>
  </section>

  <section>
    <h2>Inspect App</h2>
    <ul>
      <li><code>./myapp.pl routes</code></li>
      <li><code>./myapp.pl eval</code></li>
    </ul>
  </section>

  <section>
    <h3>Add your own</h3>
    <ul>
      <li><code>./myapp.pl migrate</code></li>
    </ul>
  </section>

  <section>
    <h3>Or get one from CPAN</h3>
    <ul>
      <li><code>./myapp.pl minion worker</code></li>
      <li><code>./myapp.pl nopaste app.pl</code></li>
      <li><code>./myapp.pl export</code></li>
    </ul>
  </section>
</section>

